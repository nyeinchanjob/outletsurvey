(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DIV' object has no attribute 'add_button'"
p3
sS'layer'
p4
S'/home/nyeinchan/web2py/applications/outletsurvey/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\nfrom gluon.contrib.appconfig import AppConfig\nfrom gluon.serializers import json\nfrom gluon.tools import geocode\n\n@auth.requires_login()\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Hello World")\n    return dict(message=T(\'Welcome to web2py!\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\nlatitude = longitude = \'\'\ndef getGPS():\n    form=SQLFORM.factory(Field(\'search\'), _class=\'form-search\')\n    form.custom.widget.search[\'_class\'] = \'input-long search-query\'\n    form.custom.submit[\'_value\'] = \'Search\'\n    form.custom.submit[\'_class\'] = \'btn\'\n    if form.accepts(request):\n        address=form.vars.search\n        (latitude, longitude) = geocode(address)\n    else:\n        (latitude, longitude) = (\'\',\'\')\n    return dict(form=form, latitude=latitude, longitude=longitude)\n\ndef outlet():\n    grid = SQLFORM.smartgrid(\n        db.outlet,\n        paginate=10,\n        csv=False,\n        details=False,\n        orderby =~db.outlet.id,\n        linked_tables=False\n    )\n    response.moduleTitle = \'Outlet Type\'\n    return dict(form=grid)\n\n\ndef question():\n    grid = SQLFORM.smartgrid(\n        db.question,\n        paginate=10,\n        csv=False,\n        details=False,\n        orderby =~db.question.id,\n        linked_tables=False\n    )\n    response.moduleTitle = \'Question Type\'\n    return dict(form=grid)\n\ndef survey():\n    def redirectToDetail(form):\n        survey_id = form.vars.id\n        redirect(URL(\'surveydetail\', vars=dict(survey_id=survey_id)))\n    form = SQLFORM.grid(db.survey, fields=[db.survey.id, db.survey.outlet_en,\n        db.survey.outlet_type, db.survey.owner_en,\n        db.survey.phone1, db.survey.ward_en,\n        db.survey.township_en, db.survey.city_en,\n        db.survey.area],\n            csv=False,\n            details=False,\n            paginate=20,\n            orderby=~db.survey.id|db.survey.city_en)\n    form.add_button("Search GPS", URL(\'default\', \'getGPS\'))\n    response.moduleTitle = \'Outlet Information\'\n    return dict(form=form)\n\ndef surveydetail():\n    survey_id = request.vars.survey_id\n    if type(survey_id) == list:\n        survey_id = survey_id[-1]\n    db.survey_detail.survey_id.default = survey_id\n    db.survey_detail.survey_id.readable = False\n    form = SQLFORM(db.survey_detail)\n    form.add_button("Back", URL(\'default\', \'survey\'))\n    if form.process().accepted:\n        redirect(URL(\'surveydetail\', vars=dict(survey_id=survey_id)))\n    response.moduleTitle = \'Question and Answer\'\n    return dict(form=form, survey_id=survey_id)\n\ndef surveydetaillist():\n    survey_id = request.vars.survey_id\n    where = (db.survey_detail.survey_id == survey_id)\n    grid = SQLFORM.grid(where, create=False, editable=False, details=False, csv=False)\n    return dict(grid=grid)\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\ndef about():\n\n    response.moduleTitle = \'About\'\n    return dict(message=T(\'Welcome Outlet Survey System!\'))\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(survey)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/nyeinchan/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/nyeinchan/web2py/applications/outletsurvey/controllers/default.py", line 143, in <module>\n  File "/home/nyeinchan/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/nyeinchan/web2py/applications/outletsurvey/controllers/default.py", line 98, in survey\n    form.add_button("Search GPS", URL(\'default\', \'getGPS\'))\nAttributeError: \'DIV\' object has no attribute \'add_button\'\n'
p11
s.