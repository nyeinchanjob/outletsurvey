(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> long() argument must be a string or a number, not 'Rows'"
p3
sS'layer'
p4
S'/home/nyeinchan/web2py/applications/outletsurvey/models/dbsetup.py'
p5
sS'code'
p6
S'from datetime import datetime\nfrom gluon.contrib.appconfig import AppConfig\nimport os\nmyconf = AppConfig(reload=True)\n\n## config group\ndb.define_table(\'config_group\',\n\tField(\'name\', \'string\', requires=[IS_NOT_EMPTY()]),\n\tField(\'is_active\', \'boolean\', default=True),\n\tformat=\'%(name)s\'\n)\nif db(db.config_group).count() < 1:\n\tdb.config_group.bulk_insert([\n\t\tdict(name=\'Outlet\'),\n\t\tdict(name=\'Question\')\n\t])\n\n## setup\ndb.define_table("setup",\n    Field("name", "string", requires=IS_NOT_EMPTY()),\n    Field("setup_type", "reference config_group", requires=[IS_NOT_EMPTY()]),\n    Field(\'is_active\', \'boolean\', default=True, label="Active"),\n\tField(\'created_on\', \'datetime\', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'created_by\', \'reference auth_user\', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_on\', \'datetime\', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_by\', \'reference auth_user\', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat=\'%(name)s\'\n)\n\ndb.setup.setup_type.requires=IS_IN_DB(db(db.config_group.is_active == True), db.config_group.id, \'%(name)s\')\n\ndb.define_table("survey",\n    Field("area", "string", requires=IS_NOT_EMPTY(), label="Area"),\n    Field("city_mm", "string", label="City(MM)"),\n    Field("city_en", "string", label="City(EN)"),\n    Field("township_mm", "string", label="Township(MM)"),\n    Field("township_en", "string", label="Township(EN)"),\n    Field("ward_mm", "string", label="Ward(MM)"),\n    Field("ward_en", "string", label="Ward(EN)"),\n    Field("outlet_type", "reference setup", label="Outlet Type"),\n    Field("outlet_mm", "string", label="Outlet(MM)", requires=IS_NOT_EMPTY()),\n    Field("outlet_en", "string", label="Outlet(EN)", requires=IS_NOT_EMPTY()),\n    Field("owner_mm", "string", label="Owner(MM)", requires=IS_NOT_EMPTY()),\n    Field("owner_en", "string", label="Owner(EN)", requires=IS_NOT_EMPTY()),\n    Field("phone1", "string", label="Phone1"),\n    Field("phone2", "string", label="Phone2"),\n    Field("phone3", "string", label="Phone3"),\n    Field("image1", "upload", uploadfolder=os.path.join(\'uploads\')),\n    Field("image2", "upload", uploadfolder=os.path.join(\'uploads\')),\n    Field("image3", "upload", uploadfolder=os.path.join(\'uploads\')),\n    Field("latitude", "string", label="Latitude", requires=IS_NOT_EMPTY()),\n    Field("longitude", "string", label="Longitude", requires=IS_NOT_EMPTY()),\n    Field(\'is_active\', \'boolean\', default=True, label="Active"),\n\tField(\'created_on\', \'datetime\', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'created_by\', \'reference auth_user\', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_on\', \'datetime\', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_by\', \'reference auth_user\', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat=lambda r: \'%s [%s]\' % (r.area, r.area)\n)\noutlet_id = db(db.config_group.name=="Outlet").select(db.config_group.id)\nprint outlet_id\ndb.survey.outlet_type.requires=IS_IN_DB(db(db.setup.setup_type == outlet_id).select(), db.setup.id, \'%(name)s\')\n\ndb.define_table("question",\n    Field("survey_id", "reference survey"),\n    Field("question_id", "reference setup", label="Question", requires=IS_NOT_EMPTY()),\n    Field("answer", "integer", requires=IS_NOT_EMPTY(), label="Answer")\n)\nqas_id = db(db.config_group.name=="Question").select(db.config_group.id)\ndb.question.question_id.requires=IS_IN_DB(db(db.setup.setup_type == qas_id), db.setup.id, \'%(name)s\')\n\n## default user root\nif db(db.auth_user).count()<1:\n    db.auth_group.bulk_insert([\n    \tdict(role=\'Admin\', description=\'System user\'),\n\t\tdict(role=\'Manager\', description=\'Manager\'),\n\t\tdict(role=\'User\', description=\'User\')\n\t])\n    db.auth_user.bulk_insert([\n\t\tdict(\n\t\t\tfirst_name=\'System\',\n\t\t\tlast_name=\'Admin\',\n\t\t\temail=\'root@coca-cola.com.mm\',\n\t\t\tpassword=db.auth_user.password.validate(\'C0ke@12345\')[0]\n\t\t),\n\t\tdict(\n\t\t\tfirst_name=\'Nyein\',\n\t\t\tlast_name=\'Chan\',\n\t\t\temail=\'nyeinchan@coca-cola.com.mm\',\n\t\t\tpassword=db.auth_user.password.validate(\'Basn4@C01\')[0]\n\t\t)\n\t])\n    auth.add_membership(user_id=1, group_id=1)\n    auth.add_membership(user_id=2, group_id=1)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/nyeinchan/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/nyeinchan/web2py/applications/outletsurvey/models/dbsetup.py", line 70, in <module>\n    db.survey.outlet_type.requires=IS_IN_DB(db(db.setup.setup_type == outlet_id).select(), db.setup.id, \'%(name)s\')\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1442, in represent\n    return str(long(obj))\nTypeError: long() argument must be a string or a number, not \'Rows\'\n'
p11
s.