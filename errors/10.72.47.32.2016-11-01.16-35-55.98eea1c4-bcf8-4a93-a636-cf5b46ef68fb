(dp1
S'output'
p2
S'<class \'gluon.contrib.pymysql.err.ProgrammingError\'> (1146, u"Table \'outlet.auth_user\' doesn\'t exist")'
p3
sS'layer'
p4
S'/home/nyeinchan/web2py/applications/outletsurvey/models/dbsetup.py'
p5
sS'code'
p6
S'from datetime import datetime\nfrom gluon.contrib.appconfig import AppConfig\nimport os\nmyconf = AppConfig(reload=True)\n\n\n\n\n## outlet\ndb.define_table("outlet",\n    Field("name", "string", requires=IS_NOT_EMPTY()),\n    Field(\'is_active\', \'boolean\', default=True, label="Active"),\n\tField(\'created_on\', \'datetime\', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'created_by\', \'reference auth_user\', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_on\', \'datetime\', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_by\', \'reference auth_user\', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat=\'%(name)s\'\n)\n\n\n## question\ndb.define_table("question",\n    Field("name", "string", requires=IS_NOT_EMPTY()),\n    Field(\'is_active\', \'boolean\', default=True, label="Active"),\n\tField(\'created_on\', \'datetime\', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'created_by\', \'reference auth_user\', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_on\', \'datetime\', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_by\', \'reference auth_user\', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat=\'%(name)s\'\n)\n\ndb.define_table("survey",\n    Field("area", "string", requires=IS_NOT_EMPTY(), label="Area"),\n    Field("city_mm", "string", label="City(MM)"),\n    Field("city_en", "string", label="City(EN)"),\n    Field("township_mm", "string", label="Township(MM)"),\n    Field("township_en", "string", label="Township(EN)"),\n    Field("ward_mm", "string", label="Ward(MM)"),\n    Field("ward_en", "string", label="Ward(EN)"),\n    Field("street_mm", "string", label="No And Street (MM)"),\n    Field("street_en", "string", label="No And Street (EN)"),\n    Field("outlet_type", "reference outlet", label="Outlet Type"),\n    Field("outlet_mm", "string", label="Outlet(MM)", requires=IS_NOT_EMPTY()),\n    Field("outlet_en", "string", label="Outlet(EN)", requires=IS_NOT_EMPTY()),\n    Field("owner_mm", "string", label="Owner(MM)", requires=IS_NOT_EMPTY()),\n    Field("owner_en", "string", label="Owner(EN)", requires=IS_NOT_EMPTY()),\n    Field("phone1", "string", label="Phone1"),\n    Field("phone2", "string", label="Phone2"),\n    Field("phone3", "string", label="Phone3"),\n    Field("image1", "upload", uploadfolder=os.path.join(\'uploads/image1\')),\n    Field("image2", "upload", uploadfolder=os.path.join(\'uploads/image2\')),\n    Field("image3", "upload", uploadfolder=os.path.join(\'uploads/image3\')),\n    Field("latitude", "string", label="Latitude", requires=IS_NOT_EMPTY()),\n    Field("longitude", "string", label="Longitude", requires=IS_NOT_EMPTY()),\n    Field(\'is_active\', \'boolean\', default=True, label="Active"),\n\tField(\'created_on\', \'datetime\', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'created_by\', \'reference auth_user\', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_on\', \'datetime\', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField(\'modified_by\', \'reference auth_user\', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat=lambda r: \'%s [%s]\' % (r.outlet_en, r.city_en)\n)\n\ndb.survey.outlet_type.requires=IS_IN_DB(db(db.outlet.is_active==True), db.outlet.id, \'%(name)s\')\n\ndb.define_table("survey_detail",\n    Field("survey_id", "reference survey", readable=False),\n    Field("question_id", "reference question", label="Question", requires=IS_NOT_EMPTY()),\n    Field("answer", "integer", requires=IS_NOT_EMPTY(), label="Answer")\n)\n\ndb.survey_detail.question_id.requires=IS_IN_DB(db(db.question.is_active==True), db.question.id, \'%(name)s\')\n\n## default user root\nif db(db.auth_user).count()<1:\n    db.auth_group.bulk_insert([\n    \tdict(role=\'Admin\', description=\'System user\'),\n\t\tdict(role=\'Manager\', description=\'Manager\'),\n\t\tdict(role=\'User\', description=\'User\')\n\t])\n    db.auth_user.bulk_insert([\n\t\tdict(\n\t\t\tfirst_name=\'System\',\n\t\t\tlast_name=\'Admin\',\n\t\t\temail=\'root@coca-cola.com.mm\',\n\t\t\tpassword=db.auth_user.password.validate(\'C0ke@12345\')[0]\n\t\t),\n\t\tdict(\n\t\t\tfirst_name=\'Nyein\',\n\t\t\tlast_name=\'Chan\',\n\t\t\temail=\'nyeinchan@coca-cola.com.mm\',\n            custom_password = \'Basn4@C01\',\n\t\t\tpassword=db.auth_user.password.validate(\'Basn4@C01\')[0]\n\t\t)\n\t])\n    auth.add_membership(user_id=1, group_id=1)\n    auth.add_membership(user_id=2, group_id=1)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/nyeinchan/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/nyeinchan/web2py/applications/outletsurvey/models/dbsetup.py", line 86, in <module>\n    if db(db.auth_user).count()<1:\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/objects.py", line 2010, in count\n    return db._adapter.count(self.query, distinct)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1321, in count\n    self.execute(self._count(query, distinct))\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\n  File "/home/nyeinchan/web2py/gluon/contrib/pymysql/cursors.py", line 117, in execute\n    self.errorhandler(self, exc, value)\n  File "/home/nyeinchan/web2py/gluon/contrib/pymysql/connections.py", line 202, in defaulterrorhandler\n    raise errorclass, errorvalue\nProgrammingError: (1146, u"Table \'outlet.auth_user\' doesn\'t exist")\n'
p11
s.